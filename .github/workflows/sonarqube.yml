name: Sonar Code Coverage
on:
  # trigger manually. Can be used to validate feature branches before open pull request
  workflow_dispatch:
    inputs:
      codecoveragetool:
        type: choice
        description: Code Coverage Tool
        required: true
        default: dotnet-coverage
        options:
          - dotnet-coverage
  push: 
    branches:
      - main
      
jobs:
  Application-Build-Test:
    runs-on: windows-latest
    
    steps:     
      - name: long path
        shell: pwsh
        run: |
          git config --system core.longpaths true

      - name: Checkout code
        uses: actions/checkout@v3
                    
      - name: Setup .Net 3.1.0
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 3.1.x
          dotnet-quality: ga
  
      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        env:
          DOTNET_INSTALL_DIR: '~/.dotnet'
          DOTNET_NOLOGO: true
          DOTNET_CLI_TELEMETRY_OPTOUT: true
          DOTNET_MULTILEVEL_LOOKUP: false
        with:
          dotnet-version: 6.x
          dotnet-quality: ga

      #- name: Add .NET Core SDK tools to PATH
      #  run: echo "PATH='$PATH:~/.dotnet/tools'" >> $GITHUB_ENV
  
      - name: Install SonarQube scanner
        run: dotnet tool install --global dotnet-sonarscanner
          
      - name: Restore packages
        run: |
          dotnet restore WebAppFramework.sln

      - name: Build with Release
        run: |
          dotnet build WebAppFramework.sln -c Release --no-incremental
      
      - name: Generate and collect unit tests coverage report [Coverlet]
        run: coverlet .\WebAppFramework.Unit.Tests.dll --target "dotnet" --targetargs 'test WebAppFramework.sln -c Release --no-restore --collect:"XPlat Code Coverage"' -f=opencover -o="coverage.xml"
      
